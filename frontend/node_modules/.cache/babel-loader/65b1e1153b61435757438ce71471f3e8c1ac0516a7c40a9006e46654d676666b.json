{"ast":null,"code":"var _jsxFileName = \"/Users/manan/school/APCS/Programming Projects/27MananG_FinalProject/frontend/src/components/GameBoard.js\";\nimport React from 'react';\nimport { Box, Paper, Button } from '@mui/material';\nimport { keyframes } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fallAnimation = keyframes`\n  from {\n    transform: translateY(-400px);\n  }\n  to {\n    transform: translateY(0);\n  }\n`;\nconst GameBoard = ({\n  board,\n  onColumnClick,\n  gameOver,\n  winner,\n  onReset\n}) => {\n  const handleColumnClick = column => {\n    console.log('Column clicked:', column);\n    if (!gameOver) {\n      onColumnClick(column);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 2,\n        bgcolor: '#1a1a1a',\n        position: 'relative',\n        overflow: 'visible',\n        borderRadius: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 1fr)',\n          gap: 1,\n          width: 'fit-content',\n          margin: '0 auto'\n        },\n        children: board[0].map((_, columnIndex) => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => handleColumnClick(columnIndex),\n          sx: {\n            width: 60,\n            height: 60,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            cursor: gameOver ? 'default' : 'pointer',\n            '&:hover': {\n              bgcolor: gameOver ? 'transparent' : 'rgba(255, 255, 255, 0.1)'\n            },\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 50,\n              height: 50,\n              borderRadius: '50%',\n              bgcolor: '#424242',\n              position: 'absolute'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), board.map((row, rowIndex) => {\n            const cell = row[columnIndex];\n            if (cell === 0) return null;\n            return /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: 50,\n                height: 50,\n                borderRadius: '50%',\n                bgcolor: cell === 1 ? 'primary.main' : 'secondary.main',\n                animation: `${fallAnimation} 0.6s cubic-bezier(0.4, 0, 0.2, 1)`,\n                position: 'absolute',\n                top: rowIndex * 60 + 5,\n                zIndex: 1\n              }\n            }, rowIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this);\n          })]\n        }, columnIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), (gameOver || winner !== null) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onReset,\n        sx: {\n          mt: 2\n        },\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","Box","Paper","Button","keyframes","jsxDEV","_jsxDEV","fallAnimation","GameBoard","board","onColumnClick","gameOver","winner","onReset","handleColumnClick","column","console","log","sx","position","mb","children","elevation","p","bgcolor","overflow","borderRadius","display","gridTemplateColumns","gap","width","margin","map","_","columnIndex","onClick","height","justifyContent","alignItems","cursor","fileName","_jsxFileName","lineNumber","columnNumber","row","rowIndex","cell","animation","top","zIndex","mt","textAlign","variant","color","_c","$RefreshReg$"],"sources":["/Users/manan/school/APCS/Programming Projects/27MananG_FinalProject/frontend/src/components/GameBoard.js"],"sourcesContent":["import React from 'react';\nimport { Box, Paper, Button } from '@mui/material';\nimport { keyframes } from '@mui/system';\n\nconst fallAnimation = keyframes`\n  from {\n    transform: translateY(-400px);\n  }\n  to {\n    transform: translateY(0);\n  }\n`;\n\nconst GameBoard = ({ board, onColumnClick, gameOver, winner, onReset }) => {\n  const handleColumnClick = (column) => {\n    console.log('Column clicked:', column);\n    if (!gameOver) {\n      onColumnClick(column);\n    }\n  };\n\n  return (\n    <Box sx={{ position: 'relative', mb: 4 }}>\n      <Paper \n        elevation={3} \n        sx={{ \n          p: 2, \n          bgcolor: '#1a1a1a',\n          position: 'relative',\n          overflow: 'visible',\n          borderRadius: 2\n        }}\n      >\n        <Box sx={{ \n          display: 'grid', \n          gridTemplateColumns: 'repeat(7, 1fr)', \n          gap: 1,\n          width: 'fit-content',\n          margin: '0 auto'\n        }}>\n          {board[0].map((_, columnIndex) => (\n            <Box\n              key={columnIndex}\n              onClick={() => handleColumnClick(columnIndex)}\n              sx={{\n                width: 60,\n                height: 60,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                cursor: gameOver ? 'default' : 'pointer',\n                '&:hover': {\n                  bgcolor: gameOver ? 'transparent' : 'rgba(255, 255, 255, 0.1)',\n                },\n                position: 'relative'\n              }}\n            >\n              {/* Empty cell background */}\n              <Box\n                sx={{\n                  width: 50,\n                  height: 50,\n                  borderRadius: '50%',\n                  bgcolor: '#424242',\n                  position: 'absolute'\n                }}\n              />\n              {/* Game pieces */}\n              {board.map((row, rowIndex) => {\n                const cell = row[columnIndex];\n                if (cell === 0) return null;\n                \n                return (\n                  <Box\n                    key={rowIndex}\n                    sx={{\n                      width: 50,\n                      height: 50,\n                      borderRadius: '50%',\n                      bgcolor: cell === 1 ? 'primary.main' : 'secondary.main',\n                      animation: `${fallAnimation} 0.6s cubic-bezier(0.4, 0, 0.2, 1)`,\n                      position: 'absolute',\n                      top: rowIndex * 60 + 5,\n                      zIndex: 1,\n                    }}\n                  />\n                );\n              })}\n            </Box>\n          ))}\n        </Box>\n      </Paper>\n      \n      {(gameOver || winner !== null) && (\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Button \n            variant=\"contained\" \n            color=\"primary\" \n            onClick={onReset}\n            sx={{ mt: 2 }}\n          >\n            New Game\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default GameBoard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAClD,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGH,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC,aAAa;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EACzE,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;IACpCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,MAAM,CAAC;IACtC,IAAI,CAACJ,QAAQ,EAAE;MACbD,aAAa,CAACK,MAAM,CAAC;IACvB;EACF,CAAC;EAED,oBACET,OAAA,CAACL,GAAG;IAACiB,EAAE,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACvCf,OAAA,CAACJ,KAAK;MACJoB,SAAS,EAAE,CAAE;MACbJ,EAAE,EAAE;QACFK,CAAC,EAAE,CAAC;QACJC,OAAO,EAAE,SAAS;QAClBL,QAAQ,EAAE,UAAU;QACpBM,QAAQ,EAAE,SAAS;QACnBC,YAAY,EAAE;MAChB,CAAE;MAAAL,QAAA,eAEFf,OAAA,CAACL,GAAG;QAACiB,EAAE,EAAE;UACPS,OAAO,EAAE,MAAM;UACfC,mBAAmB,EAAE,gBAAgB;UACrCC,GAAG,EAAE,CAAC;UACNC,KAAK,EAAE,aAAa;UACpBC,MAAM,EAAE;QACV,CAAE;QAAAV,QAAA,EACCZ,KAAK,CAAC,CAAC,CAAC,CAACuB,GAAG,CAAC,CAACC,CAAC,EAAEC,WAAW,kBAC3B5B,OAAA,CAACL,GAAG;UAEFkC,OAAO,EAAEA,CAAA,KAAMrB,iBAAiB,CAACoB,WAAW,CAAE;UAC9ChB,EAAE,EAAE;YACFY,KAAK,EAAE,EAAE;YACTM,MAAM,EAAE,EAAE;YACVT,OAAO,EAAE,MAAM;YACfU,cAAc,EAAE,QAAQ;YACxBC,UAAU,EAAE,QAAQ;YACpBC,MAAM,EAAE5B,QAAQ,GAAG,SAAS,GAAG,SAAS;YACxC,SAAS,EAAE;cACTa,OAAO,EAAEb,QAAQ,GAAG,aAAa,GAAG;YACtC,CAAC;YACDQ,QAAQ,EAAE;UACZ,CAAE;UAAAE,QAAA,gBAGFf,OAAA,CAACL,GAAG;YACFiB,EAAE,EAAE;cACFY,KAAK,EAAE,EAAE;cACTM,MAAM,EAAE,EAAE;cACVV,YAAY,EAAE,KAAK;cACnBF,OAAO,EAAE,SAAS;cAClBL,QAAQ,EAAE;YACZ;UAAE;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAEDlC,KAAK,CAACuB,GAAG,CAAC,CAACY,GAAG,EAAEC,QAAQ,KAAK;YAC5B,MAAMC,IAAI,GAAGF,GAAG,CAACV,WAAW,CAAC;YAC7B,IAAIY,IAAI,KAAK,CAAC,EAAE,OAAO,IAAI;YAE3B,oBACExC,OAAA,CAACL,GAAG;cAEFiB,EAAE,EAAE;gBACFY,KAAK,EAAE,EAAE;gBACTM,MAAM,EAAE,EAAE;gBACVV,YAAY,EAAE,KAAK;gBACnBF,OAAO,EAAEsB,IAAI,KAAK,CAAC,GAAG,cAAc,GAAG,gBAAgB;gBACvDC,SAAS,EAAE,GAAGxC,aAAa,oCAAoC;gBAC/DY,QAAQ,EAAE,UAAU;gBACpB6B,GAAG,EAAEH,QAAQ,GAAG,EAAE,GAAG,CAAC;gBACtBI,MAAM,EAAE;cACV;YAAE,GAVGJ,QAAQ;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWd,CAAC;UAEN,CAAC,CAAC;QAAA,GA7CGT,WAAW;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA8Cb,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAEP,CAAChC,QAAQ,IAAIC,MAAM,KAAK,IAAI,kBAC3BN,OAAA,CAACL,GAAG;MAACiB,EAAE,EAAE;QAAEgC,EAAE,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAA9B,QAAA,eACtCf,OAAA,CAACH,MAAM;QACLiD,OAAO,EAAC,WAAW;QACnBC,KAAK,EAAC,SAAS;QACflB,OAAO,EAAEtB,OAAQ;QACjBK,EAAE,EAAE;UAAEgC,EAAE,EAAE;QAAE,CAAE;QAAA7B,QAAA,EACf;MAED;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACW,EAAA,GA9FI9C,SAAS;AAgGf,eAAeA,SAAS;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}