{"ast":null,"code":"var _jsxFileName = \"/Users/manan/school/APCS/Programming Projects/27MananG_FinalProject/frontend/src/components/GameBoard.js\";\nimport React from 'react';\nimport { Box, Button } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameBoard = ({\n  board,\n  onColumnClick,\n  gameOver,\n  winner,\n  onReset\n}) => {\n  const renderCell = (value, row, col) => {\n    let color = 'white';\n    if (value === 1) color = '#2196f3'; // Player 1\n    if (value === 2) color = '#f50057'; // Player 2\n\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        scale: 0\n      },\n      animate: {\n        scale: 1\n      },\n      transition: {\n        duration: 0.3\n      },\n      style: {\n        width: '50px',\n        height: '50px',\n        borderRadius: '50%',\n        backgroundColor: color,\n        margin: '5px',\n        boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(7, 1fr)',\n        gap: '5px',\n        backgroundColor: '#1976d2',\n        padding: '10px',\n        borderRadius: '10px',\n        boxShadow: '0 8px 16px rgba(0,0,0,0.2)'\n      },\n      children: board.map((row, rowIndex) => row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Box, {\n        onClick: () => onColumnClick(colIndex),\n        sx: {\n          cursor: gameOver ? 'default' : 'pointer',\n          '&:hover': {\n            backgroundColor: gameOver ? 'transparent' : 'rgba(255,255,255,0.1)'\n          },\n          padding: '5px',\n          borderRadius: '5px'\n        },\n        children: renderCell(cell, rowIndex, colIndex)\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), (gameOver || winner) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onReset,\n        sx: {\n          mt: 2\n        },\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","Box","Button","motion","jsxDEV","_jsxDEV","GameBoard","board","onColumnClick","gameOver","winner","onReset","renderCell","value","row","col","color","div","initial","scale","animate","transition","duration","style","width","height","borderRadius","backgroundColor","margin","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","flexDirection","alignItems","children","gridTemplateColumns","gap","padding","map","rowIndex","cell","colIndex","onClick","cursor","mt","textAlign","variant","_c","$RefreshReg$"],"sources":["/Users/manan/school/APCS/Programming Projects/27MananG_FinalProject/frontend/src/components/GameBoard.js"],"sourcesContent":["import React from 'react';\nimport { Box, Button } from '@mui/material';\nimport { motion } from 'framer-motion';\n\nconst GameBoard = ({ board, onColumnClick, gameOver, winner, onReset }) => {\n  const renderCell = (value, row, col) => {\n    let color = 'white';\n    if (value === 1) color = '#2196f3'; // Player 1\n    if (value === 2) color = '#f50057'; // Player 2\n\n    return (\n      <motion.div\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ duration: 0.3 }}\n        style={{\n          width: '50px',\n          height: '50px',\n          borderRadius: '50%',\n          backgroundColor: color,\n          margin: '5px',\n          boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n        }}\n      />\n    );\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <Box\n        sx={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 1fr)',\n          gap: '5px',\n          backgroundColor: '#1976d2',\n          padding: '10px',\n          borderRadius: '10px',\n          boxShadow: '0 8px 16px rgba(0,0,0,0.2)',\n        }}\n      >\n        {board.map((row, rowIndex) =>\n          row.map((cell, colIndex) => (\n            <Box\n              key={`${rowIndex}-${colIndex}`}\n              onClick={() => onColumnClick(colIndex)}\n              sx={{\n                cursor: gameOver ? 'default' : 'pointer',\n                '&:hover': {\n                  backgroundColor: gameOver ? 'transparent' : 'rgba(255,255,255,0.1)',\n                },\n                padding: '5px',\n                borderRadius: '5px',\n              }}\n            >\n              {renderCell(cell, rowIndex, colIndex)}\n            </Box>\n          ))\n        )}\n      </Box>\n      \n      {(gameOver || winner) && (\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onReset}\n            sx={{ mt: 2 }}\n          >\n            New Game\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default GameBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}