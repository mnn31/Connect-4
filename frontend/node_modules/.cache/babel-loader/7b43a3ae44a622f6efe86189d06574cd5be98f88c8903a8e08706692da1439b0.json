{"ast":null,"code":"var _jsxFileName = \"/Users/manan/school/APCS/Programming Projects/27MananG_FinalProject/frontend/src/components/GameBoard.js\";\nimport React from 'react';\nimport { Box, Paper, Button, Typography } from '@mui/material';\nimport { keyframes } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fallAnimation = keyframes`\n  from {\n    transform: translateY(-400px);\n  }\n  to {\n    transform: translateY(0);\n  }\n`;\nconst GameBoard = ({\n  board,\n  onColumnClick,\n  gameOver,\n  winner,\n  onReset\n}) => {\n  const handleColumnClick = column => {\n    console.log('Column clicked:', column);\n    if (!gameOver) {\n      onColumnClick(column);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 2,\n        bgcolor: '#1a1a1a',\n        position: 'relative',\n        overflow: 'visible',\n        borderRadius: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'grid',\n          gridTemplateRows: 'repeat(6, 1fr)',\n          gap: 1,\n          width: 'fit-content',\n          margin: '0 auto'\n        },\n        children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(7, 1fr)',\n            gap: 1\n          },\n          children: row.map((cell, columnIndex) => /*#__PURE__*/_jsxDEV(Box, {\n            onClick: () => handleColumnClick(columnIndex),\n            sx: {\n              width: 60,\n              height: 60,\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              cursor: gameOver ? 'default' : 'pointer',\n              '&:hover': {\n                bgcolor: gameOver ? 'transparent' : 'rgba(255, 255, 255, 0.1)'\n              },\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: 50,\n                height: 50,\n                borderRadius: '50%',\n                bgcolor: '#424242',\n                position: 'absolute'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), cell !== 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: 50,\n                height: 50,\n                borderRadius: '50%',\n                bgcolor: cell === 1 ? 'primary.main' : 'secondary.main',\n                animation: `${fallAnimation} 0.6s cubic-bezier(0.4, 0, 0.2, 1)`,\n                position: 'absolute',\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)]\n          }, `${rowIndex}-${columnIndex}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), gameOver && winner !== null && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"primary\",\n        sx: {\n          mb: 2\n        },\n        children: winner === 1 ? \"You Win! ðŸŽ‰\" : \"AI Wins! ðŸ¤–\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onReset,\n        sx: {\n          mt: 2\n        },\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","Box","Paper","Button","Typography","keyframes","jsxDEV","_jsxDEV","fallAnimation","GameBoard","board","onColumnClick","gameOver","winner","onReset","handleColumnClick","column","console","log","sx","position","mb","children","elevation","p","bgcolor","overflow","borderRadius","display","gridTemplateRows","gap","width","margin","map","row","rowIndex","gridTemplateColumns","cell","columnIndex","onClick","height","justifyContent","alignItems","cursor","fileName","_jsxFileName","lineNumber","columnNumber","animation","zIndex","mt","textAlign","variant","color","_c","$RefreshReg$"],"sources":["/Users/manan/school/APCS/Programming Projects/27MananG_FinalProject/frontend/src/components/GameBoard.js"],"sourcesContent":["import React from 'react';\nimport { Box, Paper, Button, Typography } from '@mui/material';\nimport { keyframes } from '@mui/system';\n\nconst fallAnimation = keyframes`\n  from {\n    transform: translateY(-400px);\n  }\n  to {\n    transform: translateY(0);\n  }\n`;\n\nconst GameBoard = ({ board, onColumnClick, gameOver, winner, onReset }) => {\n  const handleColumnClick = (column) => {\n    console.log('Column clicked:', column);\n    if (!gameOver) {\n      onColumnClick(column);\n    }\n  };\n\n  return (\n    <Box sx={{ position: 'relative', mb: 4 }}>\n      <Paper \n        elevation={3} \n        sx={{ \n          p: 2, \n          bgcolor: '#1a1a1a',\n          position: 'relative',\n          overflow: 'visible',\n          borderRadius: 2\n        }}\n      >\n        <Box sx={{ \n          display: 'grid', \n          gridTemplateRows: 'repeat(6, 1fr)',\n          gap: 1,\n          width: 'fit-content',\n          margin: '0 auto'\n        }}>\n          {board.map((row, rowIndex) => (\n            <Box\n              key={rowIndex}\n              sx={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(7, 1fr)',\n                gap: 1\n              }}\n            >\n              {row.map((cell, columnIndex) => (\n                <Box\n                  key={`${rowIndex}-${columnIndex}`}\n                  onClick={() => handleColumnClick(columnIndex)}\n                  sx={{\n                    width: 60,\n                    height: 60,\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    cursor: gameOver ? 'default' : 'pointer',\n                    '&:hover': {\n                      bgcolor: gameOver ? 'transparent' : 'rgba(255, 255, 255, 0.1)',\n                    },\n                    position: 'relative'\n                  }}\n                >\n                  {/* Empty cell background */}\n                  <Box\n                    sx={{\n                      width: 50,\n                      height: 50,\n                      borderRadius: '50%',\n                      bgcolor: '#424242',\n                      position: 'absolute'\n                    }}\n                  />\n                  {/* Game piece */}\n                  {cell !== 0 && (\n                    <Box\n                      sx={{\n                        width: 50,\n                        height: 50,\n                        borderRadius: '50%',\n                        bgcolor: cell === 1 ? 'primary.main' : 'secondary.main',\n                        animation: `${fallAnimation} 0.6s cubic-bezier(0.4, 0, 0.2, 1)`,\n                        position: 'absolute',\n                        zIndex: 1,\n                      }}\n                    />\n                  )}\n                </Box>\n              ))}\n            </Box>\n          ))}\n        </Box>\n      </Paper>\n      \n      {gameOver && winner !== null && (\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Typography variant=\"h5\" color=\"primary\" sx={{ mb: 2 }}>\n            {winner === 1 ? \"You Win! ðŸŽ‰\" : \"AI Wins! ðŸ¤–\"}\n          </Typography>\n          <Button \n            variant=\"contained\" \n            color=\"primary\" \n            onClick={onReset}\n            sx={{ mt: 2 }}\n          >\n            New Game\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default GameBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}