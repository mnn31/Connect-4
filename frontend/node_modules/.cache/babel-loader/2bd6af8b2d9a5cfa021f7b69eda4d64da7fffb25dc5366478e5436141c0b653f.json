{"ast":null,"code":"var _jsxFileName = \"/Users/manan/school/APCS/Programming Projects/27MananG_FinalProject/frontend/src/components/GameBoard.js\";\nimport React from 'react';\nimport { Box, Paper, Button } from '@mui/material';\nimport { keyframes } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fallAnimation = keyframes`\n  0% {\n    transform: translateY(-400px);\n    animation-timing-function: cubic-bezier(0.1, 0.25, 0.1, 1);\n  }\n  100% {\n    transform: translateY(0);\n  }\n`;\nconst GameBoard = ({\n  board,\n  onColumnClick,\n  gameOver,\n  winner,\n  onReset\n}) => {\n  const getCellColor = value => {\n    switch (value) {\n      case 1:\n        return '#ffeb3b';\n      // Yellow for player 1\n      case 2:\n        return '#f50057';\n      // Red for player 2 (AI)\n      default:\n        return '#424242';\n      // Dark gray for empty\n    }\n  };\n  const handleColumnClick = col => {\n    if (!gameOver && onColumnClick) {\n      onColumnClick(col);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 2,\n      display: 'inline-block',\n      backgroundColor: '#1a1a1a',\n      borderRadius: 2,\n      position: 'relative',\n      overflow: 'visible'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'grid',\n        gap: 1\n      },\n      children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => handleColumnClick(colIndex),\n          sx: {\n            width: 50,\n            height: 50,\n            backgroundColor: getCellColor(cell),\n            borderRadius: '50%',\n            cursor: gameOver ? 'default' : 'pointer',\n            transition: 'background-color 0.3s',\n            animation: cell !== 0 ? `${fallAnimation} 0.6s cubic-bezier(0.1, 0.25, 0.1, 1)` : 'none',\n            position: 'relative',\n            '&:hover': {\n              backgroundColor: gameOver ? getCellColor(cell) : '#666'\n            }\n          }\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), (gameOver || winner) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onReset,\n        sx: {\n          mt: 2\n        },\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","Box","Paper","Button","keyframes","jsxDEV","_jsxDEV","fallAnimation","GameBoard","board","onColumnClick","gameOver","winner","onReset","getCellColor","value","handleColumnClick","col","elevation","sx","p","display","backgroundColor","borderRadius","position","overflow","children","gap","map","row","rowIndex","cell","colIndex","onClick","width","height","cursor","transition","animation","fileName","_jsxFileName","lineNumber","columnNumber","mt","textAlign","variant","color","_c","$RefreshReg$"],"sources":["/Users/manan/school/APCS/Programming Projects/27MananG_FinalProject/frontend/src/components/GameBoard.js"],"sourcesContent":["import React from 'react';\nimport { Box, Paper, Button } from '@mui/material';\nimport { keyframes } from '@mui/system';\n\nconst fallAnimation = keyframes`\n  0% {\n    transform: translateY(-400px);\n    animation-timing-function: cubic-bezier(0.1, 0.25, 0.1, 1);\n  }\n  100% {\n    transform: translateY(0);\n  }\n`;\n\nconst GameBoard = ({ board, onColumnClick, gameOver, winner, onReset }) => {\n  const getCellColor = (value) => {\n    switch (value) {\n      case 1:\n        return '#ffeb3b'; // Yellow for player 1\n      case 2:\n        return '#f50057'; // Red for player 2 (AI)\n      default:\n        return '#424242'; // Dark gray for empty\n    }\n  };\n\n  const handleColumnClick = (col) => {\n    if (!gameOver && onColumnClick) {\n      onColumnClick(col);\n    }\n  };\n\n  return (\n    <Paper \n      elevation={3} \n      sx={{ \n        p: 2, \n        display: 'inline-block',\n        backgroundColor: '#1a1a1a',\n        borderRadius: 2,\n        position: 'relative',\n        overflow: 'visible'\n      }}\n    >\n      <Box sx={{ display: 'grid', gap: 1 }}>\n        {board.map((row, rowIndex) => (\n          <Box key={rowIndex} sx={{ display: 'flex', gap: 1 }}>\n            {row.map((cell, colIndex) => (\n              <Box\n                key={`${rowIndex}-${colIndex}`}\n                onClick={() => handleColumnClick(colIndex)}\n                sx={{\n                  width: 50,\n                  height: 50,\n                  backgroundColor: getCellColor(cell),\n                  borderRadius: '50%',\n                  cursor: gameOver ? 'default' : 'pointer',\n                  transition: 'background-color 0.3s',\n                  animation: cell !== 0 ? `${fallAnimation} 0.6s cubic-bezier(0.1, 0.25, 0.1, 1)` : 'none',\n                  position: 'relative',\n                  '&:hover': {\n                    backgroundColor: gameOver ? getCellColor(cell) : '#666',\n                  },\n                }}\n              />\n            ))}\n          </Box>\n        ))}\n      </Box>\n      \n      {(gameOver || winner) && (\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onReset}\n            sx={{ mt: 2 }}\n          >\n            New Game\n          </Button>\n        </Box>\n      )}\n    </Paper>\n  );\n};\n\nexport default GameBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}